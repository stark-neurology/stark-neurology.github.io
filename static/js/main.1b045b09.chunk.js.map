{"version":3,"sources":["pages/HomePage.js","components/FAQ.js","pages/FAQPage.js","images/cathy.png","pages/People.js","pages/GettingThere.js","App.js","components/utils.js","reportWebVitals.js","index.js"],"names":["HomePage","props","state","Card","Body","Title","Text","React","Component","FAQ","showHelp","currentHelp","handleCloseHelp","bind","this","setState","help","currentFAQ","helplist","ListGroup","map","item","Item","action","onClick","handleShowHelp","Modal","show","onHide","Header","closeButton","content","Footer","Button","variant","FAQPage","People","Accordion","Toggle","as","eventKey","Collapse","Row","Col","sm","Image","src","cathy","roundedCircle","GettingThere","App","Container","Navbar","bg","expand","NavDropdown","title","id","className","Link","to","Brand","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b045b09.chunk.js","sourcesContent":["import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\nclass HomePage extends React.Component { \n  constructor(props){\n    super(props);\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Card>\n          <Card.Body>\n          <Card.Title>Stark Nuerology</Card.Title>\n            <Card.Text>\n              What will go here?\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default HomePage;","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\n/*\nTO-DO Put all this data in a database :-)\n*/\n\nclass FAQ extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      showHelp:false,\n      currentHelp:\"\"\n    }\n    this.handleCloseHelp = this.handleCloseHelp.bind(this);\n  }\n\n  handleCloseHelp(){this.setState({showHelp:false});}\n  handleShowHelp(help) {this.setState({showHelp:true, currentHelp:help});}\n\n  content() {\n    switch (this.state.currentHelp) {\n      case \"How to play?\":\n        return(<>\n          <p>When you start a game by pressing the play button the list you have selected to play</p>\n          <ul>\n            <li>You will have 3 seconds to place the device (recommend phone) longways on your forehead facing other people in the ready position.</li>\n            <li>They need to make you say the word on the screen without saying all or any part of the word.</li>\n            <li>If you get it correct, roll the device so it would be face down for 1/2 a second.  Then roll it back up to the ready position.</li>\n            <li>If you get it incorrect, roll the device so it would be face up for 1/2 a second.  Then roll it back down to the ready position.</li>\n            <li>Note: there has to be at least 1.5 seconds between marking correct or incorrect.</li>\n            <li>After 60 seconds, check your score.</li>\n          </ul>\n          </>);\n\n      case \"How long is a game?\":\n        return (\n          <>\n            <p>By defualt the game lasts for 60 seconds, but you can change how long it lasts here.</p>\n            \n            <p><br /><br />Note: this configuration is set per device so will not be consistent between devices.</p>\n          </>\n        )\n\n      case \"How to play with a keyboard?\":\n        return(<>\n          <p>The game is not designed for the player to be looking at it, so this mode would work with someone who has their back to a screen and people facing them. i.e. a loungeroom or a classroom.</p>\n          <ul>\n            <li>You will have 3 seconds to get ready.</li>\n            <li>They need make you say the word on the screen without saying all or any part of the word.</li>\n            <li>If you get it correct, press 'y'.</li>\n            <li>If you get it incorrect, press any other key.</li>\n            <li>After 60 seconds, check your score.</li>\n          </ul>\n          </>);\n\n      case \"What is Device information about?\":\n        return(<>\n          <p>This game uses device orientation to determine whether or not you have guessed the word.  This is not consistent across all devices and does not work on most desktop/laptops.</p>\n          <p>Tilting the phone forward indicates you got the word right. Tilting the phone up indicates you do not know the word.</p>\n          <p>As it is also a website, the access to the orientation function is also not consistent.  For example, </p>\n          <ul>\n            <li>later versions of iPhones and iPads require you to allow access on a site by site basis. They will see a Request device orientation button.</li>\n            <li>earlier version of iPhone and iPads require you to allow access in the settings for safari. Once this is set they will see the </li>\n            <li>tests on other devices will keep on happening and I will update the application as the way they work are incorporated</li>\n          </ul>\n          </>);\n\n      case \"Why would I login?\":\n        return(<>\n          <p>Login uses Google Authentication currently.</p>\n          <p>The application developer has no control over this and has no access to your google information.  The application uses google authentication for the following functionality:</p>\n          <ul>\n            <li>Allow you to create your own lists. If you want you can make it so only YOU see them (make them private)</li>\n            <li>Future functionality. The ability to rate lists then find your favourite lists, and anything else people may come up with.</li>\n            <li><b>NOTE: </b>If you are using this in a test system, the option to login will not be available.  Currently AWS implmentation is a test implementation.</li>\n          </ul>\n          </>);\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    let currentFAQ = [\"How to play?\", \"How to play with a keyboard?\", \"What is Device information about?\", \"How long is a game?\", \"Why would I login?\"];\n    if (this.props.helplist) {\n      currentFAQ=this.props.helplist;\n    }\n    return (\n      <>\n        <ListGroup>{currentFAQ.map((item)=>(\n          <ListGroup.Item key={item} action onClick={() => this.handleShowHelp(item)}>{item}</ListGroup.Item>\n        ))}\n        </ListGroup>\n        <Modal show={this.state.showHelp} onHide={this.handleCloseHelp}>\n          <Modal.Header closeButton>\n            <Modal.Title>{this.state.currentHelp}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {this.content()}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleCloseHelp}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>        \n      </>\n    )\n  }\n}\n\nexport default FAQ;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport FAQ from '../components/FAQ';\n\nclass FAQPage extends React.Component { \n  constructor(props){\n    super(props);\n    this.state = {\n    \n    }\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <>\n        <Card>\n          <Card.Body>\n          <Card.Title>Frequently Asked Questions</Card.Title>\n          <FAQ />\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default FAQPage;","export default __webpack_public_path__ + \"static/media/cathy.5159c7db.png\";","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Image from 'react-bootstrap/Image';\nimport cathy from '../images/cathy.png';\nimport Button from 'react-bootstrap/Button';\nimport { Col, Row } from 'react-bootstrap';\n\nclass People extends React.Component { \n  constructor(props){\n    super(props);\n    this.state = {\n      \n    }\n  }\n\n  componentDidMount() {\n    //let parts = window.location.href.split('?id=');\n    \n  }\n\n  render() {\n    return (\n      <>\n        <Card>\n          <Card.Body>\n          <Card.Title>Our Doctors</Card.Title>\n          <Accordion>\n              <Card>\n                <Card.Header>\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                    Catherine Stark\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body>\n                    <Row>\n                      <Col sm={4}><Image src={cathy} roundedCircle /><br /></Col>\n                      <Col>\n                        <h2>Dr Catherine Stark - MBBS (HONS), FRACP</h2>\n                        After graduating from Monash University, Dr Stark worked at The Alfred, Royal Melbourne and The Austin where she completed her Nuerological Training specialising in movement disorders.<br />\n                        In her private practise her Dr Stark covers general Nuerology with a special interest in Headache. \n                      </Col>\n                    </Row>\n                  \n                    \n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card>\n                <Card.Header>\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                    Richard Stark\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"1\">\n                  <Card.Body>\n                    <p>\n                      stuff about Richard\n                    </p>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n          </Accordion>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default People;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\n\nclass GettingThere extends React.Component { \n  constructor(props){\n    super(props);\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Card>\n          <Card.Body>\n          <Card.Title>Getting there</Card.Title>\n            <Card.Text>\n              What will go here?\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default GettingThere;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport HomePage from './pages/HomePage';\nimport FAQPage from './pages/FAQPage';\nimport People from './pages/People';\nimport GettingThere from './pages/GettingThere';\nimport {footer} from './components/utils'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n  return (\n/*\n   <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n*/\n\n  <Router>\n    <Container>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <NavDropdown title=\"Menu\" id=\"basic-nav-dropdown\" className=\"dropdown mr-auto\">\n          <NavDropdown.Item as={Link} to=\"/\">Home</NavDropdown.Item>\n          <NavDropdown.Item as={Link} to=\"/staff\">Our doctors</NavDropdown.Item>\n          <NavDropdown.Item as={Link} to=\"/gt\">Getting there</NavDropdown.Item>\n          <NavDropdown.Item as={Link} to=\"/faq\">FAQ</NavDropdown.Item>\n        </NavDropdown>\n        <Navbar.Brand as={Link} to=\"/\">SN</Navbar.Brand>\n      </Navbar>\n      {/* A <Switch> looks through its children <Route>s and renders the first one that matches the current URL. */}\n      <Switch>\n      <Route path=\"/staff\">\n          <People />\n        </Route>\n        <Route path=\"/faq\">\n          <FAQPage />\n        </Route>\n        <Route path=\"/gt\">\n          <GettingThere />\n        </Route>        \n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </Container>\n    {footer()}\n  </Router>\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nexport function footer(){\n  return (\n    <>\n      <br />\n      <p><center>\n        <b>Stark Nuerology</b><br />\n        ph: (03) 9876 5432<br />\n        fax: (03) 9876 5432<br />\n        email: sn@somewhere.com<br />\n        address: level 452, 101 Collins St<br /> \n        Melbourne 3000\n      </center></p>\n    </>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}